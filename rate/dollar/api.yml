openapi: '3.0.0'
info:
  version: 0.0.3
  title: Zam.io Получить курс криптовалюты к доллару (с возможным максимальным количеством покупки и продажи криптовалюты)
  description: "Zam.io Получить курс криптовалюты к доллару (с возможным максимальным количеством покупки и продажи криптовалюты)"
servers:
  - url: https://zam.io

paths:
  '/api/rate/dollar':
    get:
      summary: запрос курса криптовалюты к доллару
      security:
        - bearerAuth: [ ]
      parameters:
        - name: currency
          in: query
          description: сокращенное наименование криптовалюты
          required: true
          schema:
            type: string
        - name: blockchain
          in: query
          description: наименование платформы
          required: true
          schema:
            type: string
        - name: addressContract
          in: query
          description: адрес контракта криптовалюты
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/RateResponseData'
        '400':
          description: Некорректный формат входных параметров
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
        '408':
          description: Время ожидания истекло
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
        '503':
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Meta:
      type: object
      description: Метаинформация об ответе
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: Текстовый код исключения
          enum:
            - 'OK' #statuscode=200
          example: 'OK'
        message:
          type: string
          description: Дополнительная информация
          enum:
            - 'Операция выполнена' #statuscode=200
          example: 'Операция выполнена'
        description:
          type: string
          description: Пользовательская информация о результате выполнения метода
          example: 'Запрос получен. Ожидайте выполнения'
    RateResponseData:
      type: object
      description: курс криптовалты к доллару и к Zam
      required:
        - blockchain
        - currency
        - rateToDollar
        - amountPurchase
        - amountSale
        - dateRate
      properties:
        blockchain:
          type: string
          description: наименование платформы
        addressContract:
          type: string
          description: адрес контракта криптовалюты
        currency:
          type: string
          description: сокращение криптовалюты
        rateToDollar:
          type: string
          description: курс к доллару
        amountPurchase:
          type: string
          description: возможное количество покупки
        amountSale:
          type: string
          description: возможное количество продажи
        dateRate:
          type: string
          description: дата и время актуализации курса
    ExceptionResult:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ExceptionMeta'
        data:
          type: object
    ExceptionMeta:
      type: object
      description: Метаинформация об ответе
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: Текстовый код исключения
          enum:
            - 'BAD_REQUEST' #statuscode=400
            - 'UNAUTHORIZED' #STATUSCODE=401
            - 'FORBIDDEN' #STATUSCODE=403
            - 'NOT_FOUND' #STATUSCODE=404
            - 'REQUEST_TIMEOUT' #STATUSCODE=408
            - 'ERROR' #statuscode IN [500,503]
          example: 'ERROR'
        message:
          type: string
          description: Дополнительная информация
          enum:
            - 'Набор параметров или тип указаны неверно' #statuscode=400
            - 'Ошибка авторизации' #statuscode=401
            - 'Недостаточно прав для получения информации' #statuscode=403
            - 'Данные не найдены' #statuscode=404
            - 'Время ожидания истекло' #statuscode=408
            - 'Внутренняя ошибка сервера' #statuscode=500
            - 'Сервис недоступен' #statuscode=503
          example: 'Сервис недоступен'
        description:
          type: string
          description: Пользовательская информация о результате выполнения метода
