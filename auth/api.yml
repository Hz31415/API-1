openapi: '3.0.0'
info:
  version: 0.0.3
  title: Zam.io Регистрация нового пользователя
  description: "Zam.io Регистрация нового пользователя"
servers:
  - url: https://zam.io
paths:
  '/api/auth':
    post:
      summary: запрос на регистрацию нового пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequestData'
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/CodeResponseData'
        '400':
          description: Некорректный формат входных параметров
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
        '408':
          description: Время ожидания истекло
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
        '503':
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
  '/api/auth/documents/{documentId}':
    get:
      summary: получение соглашения безопасности
      parameters:
        - in: path
          name: documentId
          description: id документа
          required: true
          schema:
            type: string
            format: uuid
            example: '173e4567-e89b-12d3-a456-426614174000'
      responses:
        '200':
          description: Успешная операция
          content:
            application/*:
              schema:
                type: string
                description: тело файла документа
                format: binary
                example: 'файл соглашения'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
        '408':
          description: Время ожидания истекло
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
        '503':
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResult'
components:
  schemas:
    Meta:
      type: object
      description: Метаинформация об ответе
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: Текстовый код исключения
          enum:
            - 'OK' #statuscode=200
          example: 'OK'
        message:
          type: string
          description: Дополнительная информация
          enum:
            - 'Операция выполнена' #statuscode=200
          example: 'Операция выполнена'
        description:
          type: string
          description: Пользовательская информация о результате выполнения метода
          example: 'Запрос получен. Ожидайте выполнения'
    RegistrationRequestData:
      type: object
      description: запрос на регистрацию нового пользователя
      required:
        - phone
        - code
      properties:
        phone:
          type: string
          pattern: '^\d{10,16}$'
          description: телефон пользователя (если менее 10 символов - дополнить в конце нулями)
        fullName:
          type: string
          description: ФИО пользователя
        refCode:
          type: string
          description: реферальный код
        codeRequest:
          $ref: '#/components/schemas/CodeRequestData'
    CodeRequestData:
      type: object
      description: запрос кода верификации
      required:
        - phone
      properties:
        phone:
          type: string
          pattern: '^\d{10,16}$'
          description: телефон пользователя (если менее 10 символов - дополнить в конце нулями)
    CodeResponseData:
      type: object
      description: ответ на запрос кода верификации
      required:
        - passportMessage
      properties:
        passportMessage:
          type: string
          description: паспортная фраза
        agreement:
          $ref: '#/components/schemas/DocumentData'
    DocumentData:
      type: object
      description: Соглашение для подтверждения условий пользователем
      properties:
        id:
          type: string
          format: uuid
          example: '173e4567-e89b-12d3-a456-426624174000'
        name:
          type: string
          description: Наименование файла
          example: 'Соглашение о конфиденциальности данных'
        url:
          type: string
          description: Относительная ссылка на файл
          example: '/api/auth/documents/173e4567-e89b-12d3-a456-426614174000'
    ExceptionResult:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ExceptionMeta'
        data:
          type: object
    ExceptionMeta:
      type: object
      description: Метаинформация об ответе
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: Текстовый код исключения
          enum:
            - 'BAD_REQUEST' #statuscode=400
            - 'UNAUTHORIZED' #STATUSCODE=401
            - 'FORBIDDEN' #STATUSCODE=403
            - 'NOT_FOUND' #STATUSCODE=404
            - 'REQUEST_TIMEOUT' #STATUSCODE=408
            - 'ERROR' #statuscode IN [500,503]
          example: 'ERROR'
        message:
          type: string
          description: Дополнительная информация
          enum:
            - 'Набор параметров или тип указаны неверно' #statuscode=400
            - 'Ошибка авторизации' #statuscode=401
            - 'Недостаточно прав для получения информации' #statuscode=403
            - 'Данные не найдены' #statuscode=404
            - 'Время ожидания истекло' #statuscode=408
            - 'Внутренняя ошибка сервера' #statuscode=500
            - 'Сервис недоступен' #statuscode=503
          example: 'Сервис недоступен'
        description:
          type: string
          description: Пользовательская информация о результате выполнения метода
